{"version":3,"sources":["services/constants.ts","components/milestone/Milestone.tsx","components/card/Card.tsx","components/board/Todo.tsx","components/board/TodoCard.tsx","components/board/Board.tsx","components/gym/Gym.tsx","components/quote/Quote.tsx","mocks/gymMock.ts","mocks/countdownsMock.ts","services/CountdownServices.ts","mocks/milestonesMock.ts","services/MilestoneServices.ts","mocks/boardsMock.ts","services/BoardServices.ts","services/GymServices.ts","components/countdown/Countdown.tsx","components/countdown/Countdowns.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ApiEndpoint","ApiMethod","Mode","MilestonesContainer","props","className","children","Milestone","milestone","title","date","due","fromNow","Card","CardContainer","Todo","TodoCard","items","length","map","item","slice","push","Board","cards","card","cardId","Cell","GymCheck","Check","GymCross","Clear","GymSkip","Remove","GymDoneMarker","done","Gym","days","attendance","Quote","useState","quote","setQuote","useEffect","gymMock","ApiUrl","environment","dev","countdownsMock","countdownId","CountdownServices","getCountdowns","Promise","resolve","url","COUNTDOWNS","requestInit","method","GET","fetch","then","res","json","milestonesMock","milestoneId","MilestoneServices","getMilestones","MILESTONES","boardMock","boardId","BoardServices","getBoards","BOARDS","GymServices","getGymWeekDays","GYM","Countdown","countdownDays","useMemo","eventDate","moment","diff","countdownWeeks","countdownMonths","showDays","showWeeks","repeat","today","Date","toISOString","Countdowns","countdowns","filter","a","localeCompare","sort","b","countdown","App","milestones","setMilestones","boards","setBoards","gymWeekDays","setGymWeekDays","setCountdowns","data-theme","board","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.295d86ed.chunk.js","sourcesContent":["const port = '5000';\nconst server = 'dashboard-8d69a/us-central1';\n\nexport const ApiUrl =\n\tprocess.env.NODE_ENV !== 'production'\n\t\t? 'https://us-central1-dashboard-8d69a.cloudfunctions.net'\n\t\t: `http://localhost:${port}/${server}`;\n\nexport enum ApiEndpoint {\n\tCOUNTDOWNS = '/countdowns',\n\tMILESTONES = '/milestones',\n\tBOARDS = '/boards',\n\tGYM = '/gym',\n}\n\nexport enum ApiMethod {\n\tGET = 'GET',\n\tPOST = 'POST',\n\tPUT = 'PUT',\n\tPATCH = 'PATCH',\n\tDELETE = 'DELETE',\n}\n\nexport enum Mode {\n\tdev,\n\tprod,\n}\n\nexport const environment: Mode = Mode.dev;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { MilestoneModel } from '../../models/MilestoneModels';\nimport './Milestone.css';\n\nexport const MilestonesContainer: React.FC = (props) => {\n\treturn <div className={'milestones-container'}>{props.children}</div>;\n};\n\ninterface MilestoneProps {\n\tmilestone: MilestoneModel;\n}\n\nexport const Milestone: React.FC<MilestoneProps> = (props) => {\n\treturn (\n\t\t<div className={'milestone'}>\n\t\t\t<p>{props.milestone.title}</p>\n\t\t\t<h4>\n\t\t\t\t<Moment date={props.milestone.due} fromNow />\n\t\t\t</h4>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport './Card.css';\n\ninterface CardProps {\n\ttitle: string;\n}\n\nexport const Card: React.FC<CardProps> = (props) => {\n\treturn (\n\t\t<div className={'card'}>\n\t\t\t<h3>{props.title}</h3>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport const CardContainer = (props: any) => (\n\t<div className={'card-container'} {...props}></div>\n);\n","import React from 'react';\n\nimport './Todo.css';\n\nexport const Todo: React.FC = (props) => {\n\treturn <div className={'todo'}>{props.children}</div>;\n};\n","import React, { ReactNode } from 'react';\nimport { Card } from '../card/Card';\nimport { Todo } from './Todo';\n\ninterface TodoCardProps {\n\ttitle: string;\n\titems: string[];\n}\n\nexport const TodoCard: React.FC<TodoCardProps> = (props) => {\n\tlet items: ReactNode[] = [];\n\tconst getItems = () => {\n\t\tif (props.items.length < 5)\n\t\t\titems = props.items.map((item) => <Todo key={item}>{item}</Todo>);\n\t\telse if (props.items.length >= 5) {\n\t\t\titems = props.items\n\t\t\t\t.slice(0, 3)\n\t\t\t\t.map((item) => <Todo key={item}>{item}</Todo>);\n\t\t\titems.push(\n\t\t\t\t<Todo key={'last one'}>{`+ ${\n\t\t\t\t\tprops.items.length - 3\n\t\t\t\t} more items...`}</Todo>,\n\t\t\t);\n\t\t}\n\t\treturn items;\n\t};\n\n\treturn <Card title={props.title}>{getItems()}</Card>;\n};\n","import React from 'react';\nimport { CardModel } from '../../models/BoardModels';\nimport { CardContainer } from '../card/Card';\nimport { TodoCard } from './TodoCard';\n\ninterface BoardProps {\n\ttitle: string;\n\tcards: CardModel[];\n}\n\nexport const Board: React.FC<BoardProps> = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<h2>{props.title}</h2>\n\t\t\t<CardContainer>\n\t\t\t\t{props.cards.map((card) => {\n\t\t\t\t\tif (card.items && card.items.length > 0)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TodoCard\n\t\t\t\t\t\t\t\tkey={card.cardId}\n\t\t\t\t\t\t\t\ttitle={card.title}\n\t\t\t\t\t\t\t\titems={card.items}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t})}\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n","import { Check, Clear, Remove } from '@material-ui/icons';\nimport React from 'react';\nimport './Gym.css';\n\ninterface GymProps {\n\tdays: number[];\n\tattendance: number;\n}\n\nconst Cell: React.FC = (props) => {\n\treturn <div className={'gym-cell'}>{props.children}</div>;\n};\n\nconst GymCheck = () => {\n\treturn (\n\t\t<p className={'gym-tick'}>\n\t\t\t<Check />\n\t\t</p>\n\t);\n};\n\nconst GymCross = () => {\n\treturn (\n\t\t<p className={'gym-cross'}>\n\t\t\t<Clear />\n\t\t</p>\n\t);\n};\n\nconst GymSkip = () => {\n\treturn (\n\t\t<p className={'gym-skip'}>\n\t\t\t<Remove />\n\t\t</p>\n\t);\n};\n\nconst GymDoneMarker: React.FC<{ done: number }> = (props) => {\n\tif (props.done === 0) return <GymCross />;\n\tif (props.done === 1) return <GymCheck />;\n\tif (props.done === 2) return <GymSkip />;\n\telse return null;\n};\n\nexport const Gym: React.FC<GymProps> = (props) => {\n\treturn (\n\t\t<div className={'gym'}>\n\t\t\t<div className={'gym-cells'}>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Mon</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[0]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Tue</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[1]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Wed</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[2]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Thu</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[3]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Fri</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[4]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Sat</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[5]} />\n\t\t\t\t</Cell>\n\t\t\t\t<Cell>\n\t\t\t\t\t<p>Sun</p>\n\t\t\t\t\t<GymDoneMarker done={props.days[6]} />\n\t\t\t\t</Cell>\n\t\t\t</div>\n\t\t\t<p>{props.attendance}% this month.</p>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport './Quote.css';\n\nexport const Quote: React.FC = () => {\n\tconst [quote, setQuote] = useState<string>('Loading...');\n\n\tuseEffect(() => {\n\t\tif (process.env.NODE_ENV === 'production') {\n\t\t\tsetQuote('Prod');\n\t\t} else {\n\t\t\tsetQuote('I\\'m in dev so I didn\\'t fetch a quote.');\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className={'quote'}>\n\t\t\t<blockquote>{quote}</blockquote>\n\t\t</div>\n\t);\n};\n","export const gymMock: number[] = [1, 0, 1, 2, -1, -1, -1];\n\nexport const monthGymMock: number = 50;\n","import { CountdownModel } from '../models/CountdownModels';\n\nexport const countdownsMock: CountdownModel[] = [\n\t{\n\t\tcountdownId: 0,\n\t\ttitle: 'Christmas',\n\t\tdate: '2022-12-25T10:00:00.000Z',\n\t},\n\t{\n\t\tcountdownId: 1,\n\t\ttitle: 'Something',\n\t\tdate: '2022-04-19T19:00:00.000Z',\n\t},\n\t{\n\t\tcountdownId: 2,\n\t\ttitle: 'Another',\n\t\tdate: '2022-07-19T19:00:00.000Z',\n\t},\n];\n","import { CountdownModel } from '../models/CountdownModels';\nimport { ApiEndpoint, ApiMethod, ApiUrl, environment, Mode } from './constants';\nimport { countdownsMock } from '../mocks/countdownsMock';\n\nconst CountdownServices = {\n\tgetCountdowns(): Promise<CountdownModel[]> {\n\t\tif (environment === Mode.dev) {\n\t\t\treturn Promise.resolve(countdownsMock);\n\t\t}\n\t\tconst url = `${ApiUrl}${ApiEndpoint.COUNTDOWNS}`;\n\t\tconst requestInit: RequestInit = {\n\t\t\tmethod: ApiMethod.GET,\n\t\t};\n\t\treturn fetch(url, requestInit).then((res) => res.json());\n\t},\n};\n\nexport default CountdownServices;\n","import { MilestoneModel } from '../models/MilestoneModels';\n\nexport const milestonesMock: MilestoneModel[] = [\n\t{\n\t\tmilestoneId: 0,\n\t\ttitle: 'Finish dashboard',\n\t\tdue: '2021-10-05T10:55:00.000Z',\n\t},\n\t{\n\t\tmilestoneId: 1,\n\t\ttitle: 'Write API',\n\t\tdue: '2021-10-10T10:55:00.000Z',\n\t},\n\t{\n\t\tmilestoneId: 2,\n\t\ttitle: 'Persist state',\n\t\tdue: '2021-10-15T10:55:00.000Z',\n\t},\n];\n","import { milestonesMock } from '../mocks/milestonesMock';\nimport { MilestoneModel } from '../models/MilestoneModels';\nimport { ApiEndpoint, ApiMethod, ApiUrl, environment, Mode } from './constants';\n\nconst MilestoneServices = {\n\tgetMilestones(): Promise<MilestoneModel[]> {\n\t\tif (environment === Mode.dev) {\n\t\t\treturn Promise.resolve(milestonesMock);\n\t\t}\n\t\tconst url = `${ApiUrl}${ApiEndpoint.MILESTONES}`;\n\t\tconst requestInit: RequestInit = {\n\t\t\tmethod: ApiMethod.GET,\n\t\t};\n\t\treturn fetch(url, requestInit).then((res) => res.json());\n\t},\n};\n\nexport default MilestoneServices;\n","import { BoardModel } from '../models/BoardModels';\n\nexport const boardMock: BoardModel[] = [\n\t{\n\t\tboardId: 0,\n\t\ttitle: 'To Do',\n\t\tcards: [\n\t\t\t{\n\t\t\t\tcardId: 0,\n\t\t\t\ttitle: 'COSC401',\n\t\t\t\titems: ['Assignment 2'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 1,\n\t\t\t\ttitle: 'COSC422',\n\t\t\t\titems: ['Assignment 2', 'Labs'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 2,\n\t\t\t\ttitle: 'COSC424',\n\t\t\t\titems: [\n\t\t\t\t\t'Write up lab 6',\n\t\t\t\t\t'Write up lab 7',\n\t\t\t\t\t'Write up lab 8',\n\t\t\t\t\t'Write up lab 9',\n\t\t\t\t\t'Assignment 2',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 3,\n\t\t\t\ttitle: 'SENG402',\n\t\t\t\titems: [],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tboardId: 1,\n\t\ttitle: 'Doing',\n\t\tcards: [\n\t\t\t{\n\t\t\t\tcardId: 0,\n\t\t\t\ttitle: 'COSC401',\n\t\t\t\titems: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 1,\n\t\t\t\ttitle: 'COSC422',\n\t\t\t\titems: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 2,\n\t\t\t\ttitle: 'COSC424',\n\t\t\t\titems: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tcardId: 3,\n\t\t\t\ttitle: 'SENG402',\n\t\t\t\titems: ['Final Report', 'Poster'],\n\t\t\t},\n\t\t],\n\t},\n];\n","import { boardMock } from '../mocks/boardsMock';\nimport { BoardModel } from '../models/BoardModels';\nimport { ApiEndpoint, ApiMethod, ApiUrl, environment, Mode } from './constants';\n\nconst BoardServices = {\n\tgetBoards(): Promise<BoardModel[]> {\n\t\tif (environment === Mode.dev) {\n\t\t\treturn Promise.resolve(boardMock);\n\t\t}\n\t\tconst url = `${ApiUrl}${ApiEndpoint.BOARDS}`;\n\t\tconst requestInit: RequestInit = {\n\t\t\tmethod: ApiMethod.GET,\n\t\t};\n\t\treturn fetch(url, requestInit).then((res) => res.json());\n\t},\n};\n\nexport default BoardServices;\n","import { gymMock } from '../mocks/gymMock';\nimport { GymWeekDaysModel } from '../models/GymModels';\nimport { ApiEndpoint, ApiMethod, ApiUrl, environment, Mode } from './constants';\n\nconst GymServices = {\n\tgetGymWeekDays(): Promise<GymWeekDaysModel> {\n\t\tif (environment === Mode.dev) {\n\t\t\treturn Promise.resolve(gymMock);\n\t\t}\n\t\tconst url = `${ApiUrl}${ApiEndpoint.GYM}`;\n\t\tconst requestInit: RequestInit = {\n\t\t\tmethod: ApiMethod.GET,\n\t\t};\n\t\treturn fetch(url, requestInit).then((res) => res.json());\n\t},\n};\n\nexport default GymServices;\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\n\nfunction getDaysUntilDate(eventDate: string) {\n\treturn moment(eventDate).diff(moment(), 'days');\n}\n\nfunction getWeeksUntilDate(eventDate: string) {\n\treturn moment(eventDate).diff(moment(), 'weeks');\n}\n\nfunction getMonthsUntilDate(eventDate: string) {\n\treturn moment(eventDate).diff(moment(), 'months');\n}\n\nconst dayEmoji = '☀️';\nconst weekEmoji = '🌕';\nconst monthEmoji = '🌎';\n\nexport const Countdown: React.FC<{ title: string; date: string }> = (props) => {\n\tconst countdownDays = useMemo(() => getDaysUntilDate(props.date), [props.date]);\n\tconst countdownWeeks = useMemo(() => getWeeksUntilDate(props.date), [props.date]);\n\tconst countdownMonths = useMemo(() => getMonthsUntilDate(props.date), [props.date]);\n\n\tconst showDays = countdownDays <= 30;\n\tconst showWeeks = countdownWeeks <= 30;\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{props.title}</p>\n\t\t\t<h4>\n\t\t\t\t{\n\t\t\t\t\tshowDays ?\n\t\t\t\t\t\t`${dayEmoji.repeat(countdownDays)} ${countdownDays} days` :\n\t\t\t\t\t\t(showWeeks ?\n\t\t\t\t\t\t\t`${weekEmoji.repeat(countdownWeeks)} ${countdownWeeks} weeks` :\n\t\t\t\t\t\t\t`${monthEmoji.repeat(countdownMonths)} ${countdownMonths} months`)\n\t\t\t\t}\n\t\t\t</h4>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { CountdownModel } from '../../models/CountdownModels';\nimport { Countdown } from './Countdown';\n\nconst today = (new Date()).toISOString();\n\nexport const Countdowns: React.FC<{ countdowns: CountdownModel[] }> = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t{props.countdowns\n\t\t\t\t.filter(a => a.date.localeCompare(today) >= 0)\n\t\t\t\t.sort((a, b) => a.date.localeCompare(b.date))\n\t\t\t\t.map((countdown) => (\n\t\t\t\t\t<Countdown key={countdown.countdownId} title={countdown.title} date={countdown.date} />\n\t\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from 'react';\nimport './theme.css';\nimport './App.css';\nimport { Milestone, MilestonesContainer } from './components/milestone/Milestone';\nimport { Board } from './components/board/Board';\nimport { Gym } from './components/gym/Gym';\nimport { Quote } from './components/quote/Quote';\nimport { monthGymMock } from './mocks/gymMock';\nimport { CountdownModel } from './models/CountdownModels';\nimport { MilestoneModel } from './models/MilestoneModels';\nimport { BoardModel } from './models/BoardModels';\nimport { GymWeekDaysModel } from './models/GymModels';\nimport CountdownServices from './services/CountdownServices';\nimport MilestoneServices from './services/MilestoneServices';\nimport BoardServices from './services/BoardServices';\nimport GymServices from './services/GymServices';\nimport { Countdowns } from './components/countdown/Countdowns';\n\nconst App: React.FC = () => {\n\tconst [milestones, setMilestones] = useState<MilestoneModel[]>([]);\n\tconst [boards, setBoards] = useState<BoardModel[]>([]);\n\tconst [gymWeekDays, setGymWeekDays] = useState<GymWeekDaysModel>([]);\n\tconst [countdowns, setCountdowns] = useState<CountdownModel[]>([]);\n\n\tuseEffect(() => {\n\t\tMilestoneServices.getMilestones().then((res) => {\n\t\t\tsetMilestones(res);\n\t\t});\n\n\t\tBoardServices.getBoards().then((res) => {\n\t\t\tsetBoards(res);\n\t\t});\n\n\t\tGymServices.getGymWeekDays().then((res) => {\n\t\t\tsetGymWeekDays(res);\n\t\t});\n\n\t\tCountdownServices.getCountdowns().then((res) => {\n\t\t\tsetCountdowns(res);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className='App' data-theme='dark'>\n\t\t\t{boards.map((board) => {\n\t\t\t\tif (board.cards.length > 0)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Board\n\t\t\t\t\t\t\tkey={board.boardId}\n\t\t\t\t\t\t\ttitle={board.title}\n\t\t\t\t\t\t\tcards={board.cards}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t})}\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t\t<h2>Milestones</h2>\n\t\t\t\t<MilestonesContainer>\n\t\t\t\t\t{milestones\n\t\t\t\t\t\t.sort((a, b) => a.due.localeCompare(b.due))\n\t\t\t\t\t\t.map((milestone) => (\n\t\t\t\t\t\t\t<Milestone key={milestone.milestoneId} milestone={milestone} />\n\t\t\t\t\t\t))}\n\t\t\t\t</MilestonesContainer>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div>\n\t\t\t\t<h2>Gym</h2>\n\t\t\t\t<Gym days={gymWeekDays} attendance={monthGymMock} />\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<Countdowns countdowns={countdowns} />\n\t\t\t<hr />\n\t\t\t<Quote />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href,\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}